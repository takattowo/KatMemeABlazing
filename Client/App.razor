@inject Microsoft.AspNetCore.Components.WebAssembly.Services.LazyAssemblyLoader AssemblyLoader
@inject NavigationManager _navigationManager

    <LoadingScreen>
        <CascadingAuthenticationState>
            <Router AppAssembly="@typeof(Program).Assembly" PreferExactMatches="@true">
                <Found Context="routeData">
                    <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
                </Found>
                <NotFound>
                    @if (1==1)
                    {
                        redirectto();
                    } 
                </NotFound>
            </Router>
        </CascadingAuthenticationState>
    </LoadingScreen>


    @code {
        private List<System.Reflection.Assembly> lazyLoadedAssemblies = new List<System.Reflection.Assembly>();
        private async Task OnNavigation(NavigationContext context)
        {
            if (context.Path == "settings")
            {
                var assemblies = await AssemblyLoader.LoadAssembliesAsync(new[] { "Radzen.Blazor.dll" });
                lazyLoadedAssemblies.AddRange(assemblies);
            }
        }

        private void redirectto()
        {
            _navigationManager.NavigateTo("404");
        }
    }
